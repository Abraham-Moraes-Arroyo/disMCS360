#include <iostream>
using namespace std;


int main() {
  // int L[9]={1,2,3,4,5,6,7,8,9};
  // we intialize the array with the L[9]
  // however, here we have intialized it and created it in one lin e


  //2-D array 
  // int R[2][3]={{1,2,3},{4,5,6}};

  // class example

  int L[4]={1,2,3,4};

  char R[2][4]={{'a','b','c','d'},{'e','f','g','h'}};
  cout<< R[1][3]<< endl;

  // here we are going to see what sz is  
  // cout << sz<< endl;
// it wont work


// how to get the last element of the array 
// L consists of elements that have bytes and when dividing we get the number of bytes

  int sz=sizeof(L)/sizeof(L[0]);
  cout << L[sz-1];// this kind of works, but it also returns some sort of address
  // cout << L[]<< endl;// we can't use L[-1]
  cout << R[1][3]<< endl;// the output is h
  // [subarray][#placementOfElement]

  return 0;
}
